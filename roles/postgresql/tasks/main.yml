---

- name: Install postgresql (and psycopg2)
  apt:
    name:
      - postgresql-12
      - postgresql-client-12
      - python3-psycopg2
    update_cache: yes
  become: yes
  become_user: root

- name: Setup permissions for data directory
  file:
    path: "{{ postgresql_data_directory }}"
    mode: "0700"
    owner: postgres
    group: postgres
    state: directory
  when: postgresql_data_directory
  become: yes
  become_user: root

- name: Check if database is initialized
  stat:
    path: "{{ postgresql_data_directory }}/PG_VERSION"
  register: pg_version
  when: postgresql_data_directory
  become: yes
  become_user: root

- name: Ensure postgresql database is initialized.
  command: "/usr/lib/postgresql/12/bin/initdb -D {{ postgresql_data_directory }}"
  when: postgresql_data_directory and (not pg_version.stat.exists)
  become: yes
  become_user: postgres

- name: Setup data directory in postgresql.conf
  lineinfile:
    path: /etc/postgresql/12/main/postgresql.conf
    regexp: "^#?data_directory"
    line: "data_directory = '{{ postgresql_data_directory }}'"
  when: postgresql_data_directory
  notify: restart postgresql
  become: yes
  become_user: root

- name: Setup listen addresses in postgresql.conf
  lineinfile:
    path: /etc/postgresql/12/main/postgresql.conf
    regexp: "^#?listen_addresses"
    line: "listen_addresses = '{{ postgresql_listen_addresses | join(',') }}'"
  when: postgresql_listen_addresses
  notify: restart postgresql
  become: yes
  become_user: root

- name: Setup extra entries in pg_hba.conf
  lineinfile:
    path: /etc/postgresql/12/main/pg_hba.conf
    line: "{{ item }}"
  with_items: "{{ postgresql_extra_hba_entries }}"
  notify: restart postgresql
  become: yes
  become_user: root

- name: Setup tuning parameters postgresql.conf
  lineinfile:
    path: /etc/postgresql/12/main/postgresql.conf
    regexp: "^#?{{ item.name }}"
    line: "{{ item.name }} = {{ item.value }}"
  with_items: "{{ postgresql_tuning_parameters }}"
  notify: restart postgresql
  become: yes
  become_user: root

- name: Flush handlers
  meta: flush_handlers

- name: Create cluster users
  postgresql_user:
    name: "{{ item.username }}"
    password: "{{ item.password }}"
  with_items: "{{ postgresql_users }}"
  no_log: yes
  become: yes
  become_user: postgres

- name: Create cluster databases
  postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ item.owner }}"
  with_items: "{{ postgresql_databases }}"
  become: yes
  become_user: postgres

- name: Setup firewall rules
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
  with_items:
    - rule: allow
      port: 5432
  when: postgresql_listen_addresses
  become: yes
  become_user: root
