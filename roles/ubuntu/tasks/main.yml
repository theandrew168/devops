---

- name: Ensure en_US.UTF-8 locale is available
  locale_gen:
    name: en_US.UTF-8
    state: present
  become: yes
  become_user: root

- name: Check current system locale
  command: localectl status
  register: locale_status
  changed_when: no
  become: yes
  become_user: root

- name: Set system locale
  command: localectl set-locale en_US.UTF-8
  when: "'LANG=en_US.UTF-8' not in locale_status.stdout"
  become: yes
  become_user: root

- name: Set timezone to Etc/UTC
  timezone:
    name: Etc/UTC
  become: yes
  become_user: root

- name: Install common system tools
  apt:
    name:
      - build-essential
      - haveged
      - htop
      - iptables
      - lsof
      - ncdu
      - net-tools
      - python3
      - python3-venv
      - ripgrep
      - rlwrap
      - sqlite3
      - tree
      - ufw
      - unattended-upgrades
      - unzip
      - vim
    update_cache: yes
  become: yes
  become_user: root

- name: Configure unattended upgrades
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  with_items:
    - src: 20auto-upgrades.j2
      dest: /etc/apt/apt.conf.d/20auto-upgrades
    - src: 50unattended-upgrades.j2
      dest: /etc/apt/apt.conf.d/50unattended-upgrades
  become: yes
  become_user: root

- name: Limit journald log sizes
  lineinfile:
    path: /etc/systemd/journald.conf
    regexp: "^#?{{ item.name }}"
    line: "{{ item.name }}={{ item.value}}"
  with_items:
    - name: SystemMaxUse
      value: 50M
    - name: SystemMaxFileSize
      value: 10M
  notify: restart systemd-journald
  become: yes
  become_user: root

- name: Enforce pubkey as only SSH auth method
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^#?{{ item.name }}"
    line: "{{ item.name }} {{ item.value }}"
  with_items:
    - name: UsePAM
      value: "yes"
    - name: PubkeyAuthentication
      value: "yes"
    - name: PasswordAuthentication
      value: "no"
    - name: ChallengeResponseAuthentication
      value: "no"
  notify: reload sshd
  become: yes
  become_user: root

- name: Limit SSH login attempts
  ufw:
    rule: limit
    port: "22"
  notify: ufw enable
  become: yes
  become_user: root

- name: Fix default permissions on mounted volumes
  file:
    path: "{{ item }}"
    mode: "0755"
  with_items: "{{ mounted_volumes }}"
  become: yes
  become_user: root

- name: Make vim the default text editor
  alternatives:
    name: editor
    path: /usr/bin/vim.basic
  become: yes
  become_user: root

- name: Setup gateway IP forwarding
  lineinfile:
    path: /etc/ufw/sysctl.conf
    regexp: "^#?{{ item.name }}"
    line: "{{ item.name}}={{ item.value }}"
  with_items:
    - name: net/ipv4/ip_forward
      value: 1
    - name: net/ipv6/conf/default/forwarding
      value: 1
    - name: net/ipv6/conf/all/forwarding
      value: 1
  when: vpc_is_gateway
  become: yes
  become_user: root

- name: Setup gateway traffic translation rule
  blockinfile:
    path: /etc/ufw/before.rules
    block: |
      # NAT table rules
      *nat
      :POSTROUTING ACCEPT [0:0]
      -A POSTROUTING -s {{ vpc_network_prefix }} -o eth0 -j MASQUERADE
      COMMIT
  when: vpc_is_gateway
  become: yes
  become_user: root

- name: Setup gateway default forward policy
  ufw:
    default: allow
    direction: routed
  when: vpc_is_gateway
  become: yes
  become_user: root

- name: Check public gateway
  shell: route -n | awk '$1 == "0.0.0.0" {print $2}'
  register: public_gateway
  changed_when: no
  when: vpc_is_internal
  become: yes
  become_user: root

- name: Delete internal public gateway route
  lineinfile: 
    path: /etc/netplan/50-cloud-init.yaml
    regexp: "^\\s*gateway4:"
    state: absent
  when: vpc_is_internal
  notify: netplan apply
  become: yes
  become_user: root

- name: Setup internal metadata route
  blockinfile: 
    path: /etc/netplan/50-cloud-init.yaml
    marker: "# {mark} ANSIBLE MANAGED BLOCK metadata"
    insertbefore: "^\\s*set-name: eth0"
    block: "            routes:\n            - to: 169.254.169.254\n              via: {{ public_gateway.stdout }}"
  when: vpc_is_internal and (public_gateway.stdout != vpc_gateway_private_ip)
  notify: netplan apply
  become: yes
  become_user: root

- name: Setup internal gateway route
  blockinfile: 
    path: /etc/netplan/50-cloud-init.yaml
    marker: "# {mark} ANSIBLE MANAGED BLOCK internal"
    insertbefore: "^\\s*set-name: eth1"
    block: "            routes:\n            - to: 0.0.0.0/0\n              via: {{ vpc_gateway_private_ip }}"
  when: vpc_is_internal
  notify: netplan apply
  become: yes
  become_user: root
