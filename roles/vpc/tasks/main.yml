---

- name: Setup gateway IP forwarding
  lineinfile:
    path: /etc/ufw/sysctl.conf
    regexp: "^#?{{ item.name }}"
    line: "{{ item.name}}={{ item.value }}"
  with_items:
    - name: net/ipv4/ip_forward
      value: 1
    - name: net/ipv6/conf/default/forwarding
      value: 1
    - name: net/ipv6/conf/all/forwarding
      value: 1
  when: vpc_is_gateway
  become: yes
  become_user: root

- name: Setup gateway traffic translation rule
  blockinfile:
    path: /etc/ufw/before.rules
    block: |
      # NAT table rules
      *nat
      :POSTROUTING ACCEPT [0:0]
      -A POSTROUTING -s {{ vpc_network_prefix }} -o eth0 -j MASQUERADE
      COMMIT
  when: vpc_is_gateway
  notify: ufw reload
  become: yes
  become_user: root

- name: Setup gateway default forward policy
  ufw:
    default: allow
    direction: routed
  when: vpc_is_gateway
  become: yes
  become_user: root

- name: Check public gateway
  shell: route -n | awk '$1 == "0.0.0.0" {print $2}'
  register: public_gateway
  changed_when: no
  when: vpc_is_internal
  become: yes
  become_user: root

- name: Delete internal public gateway route
  lineinfile: 
    path: /etc/netplan/50-cloud-init.yaml
    regexp: "^\\s*gateway4:"
    state: absent
  when: vpc_is_internal
  notify: netplan apply
  become: yes
  become_user: root

# hardcoded IP here is for the droplet metadata service
# https://docs.digitalocean.com/products/droplets/how-to/retrieve-droplet-metadata/
- name: Setup internal metadata route
  blockinfile: 
    path: /etc/netplan/50-cloud-init.yaml
    marker: "# {mark} ANSIBLE MANAGED BLOCK metadata"
    insertbefore: "^\\s*set-name: eth0"
    block: "            routes:\n            - to: 169.254.169.254\n              via: {{ public_gateway.stdout }}"
  when: vpc_is_internal and (public_gateway.stdout != vpc_gateway_private_ip)
  notify: netplan apply
  become: yes
  become_user: root

- name: Setup internal gateway route
  blockinfile: 
    path: /etc/netplan/50-cloud-init.yaml
    marker: "# {mark} ANSIBLE MANAGED BLOCK internal"
    insertbefore: "^\\s*set-name: eth1"
    block: "            routes:\n            - to: 0.0.0.0/0\n              via: {{ vpc_gateway_private_ip }}"
  when: vpc_is_internal
  notify: netplan apply
  become: yes
  become_user: root
